{"version":3,"sources":["webpack:///./src/templates/faq-page.js","webpack:///./src/components/Header/index.js","webpack:///./static/img/jumbotron2.jpg"],"names":["FAQTemplate","_ref","title","meta_title","meta_description","faqs","text","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","_components_Header__WEBPACK_IMPORTED_MODULE_5__","className","style","marginTop","map","f","index","key","question","dangerouslySetInnerHTML","__html","answer","propTypes","PropTypes","string","array","FAQ","_ref2","frontmatter","data","markdownRemark","shape","object","FAQPage","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_static_img_jumbotron2_jpg__WEBPACK_IMPORTED_MODULE_2__","_static_img_jumbotron2_jpg__WEBPACK_IMPORTED_MODULE_2___default","Header","backgroundImage","jumbotron","padding","module","exports","p"],"mappings":"gQAMaA,EAAc,SAAAC,GAAA,IACzBC,EADyBD,EACzBC,MACAC,EAFyBF,EAEzBE,WACAC,EAHyBH,EAGzBG,iBAEAC,GALyBJ,EAIzBK,KAJyBL,EAKzBI,MALyB,OAOzBE,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAAH,EAAD,KACED,EAAAC,EAAAC,cAAA,aAAQN,GACRI,EAAAC,EAAAC,cAAA,QAAMG,KAAK,cAAcC,QAAST,KAEpCG,EAAAC,EAAAC,cAACK,EAAA,EAAD,CAAQZ,MAAOA,IACfK,EAAAC,EAAAC,cAAA,WAASM,UAAU,OAAOC,MAAO,CAACC,UAAU,SACzCZ,EAAKa,IAAI,SAACC,EAAGC,GAAJ,OACRb,EAAAC,EAAAC,cAAA,WAAUY,IAAKD,EAAOL,UAAU,sBAC9BR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,kBACbR,EAAAC,EAAAC,cAAA,SAAIU,EAAEG,WAERf,EAAAC,EAAAC,cAAA,OAAKM,UAAU,gBACbR,EAAAC,EAAAC,cAAA,OAAKM,UAAU,oBACVQ,wBAAyB,CAACC,OAAQL,EAAEM,iBAUrDzB,EAAY0B,UAAY,CACtBxB,MAAOyB,IAAUC,OACjBzB,WAAYwB,IAAUC,OACtBxB,iBAAkBuB,IAAUC,OAC5BtB,KAAMqB,IAAUC,OAChBvB,KAAMsB,IAAUE,OAGlB,IAAMC,EAAM,SAAAC,GAAY,IACfC,EADeD,EAAVE,KACeC,eAApBF,YAEP,OACEzB,EAAAC,EAAAC,cAACT,EAAD,CACEE,MAAO8B,EAAY9B,MACnBC,WAAY6B,EAAY7B,WACxBC,iBAAkB4B,EAAY5B,iBAC9BE,KAAM0B,EAAY1B,KAClBD,KAAM2B,EAAY3B,QAKxByB,EAAIJ,UAAY,CACdO,KAAMN,IAAUQ,MAAM,CACpBD,eAAgBP,IAAUQ,MAAM,CAC9BH,YAAaL,IAAUS,YAKdN,YAER,IAAMO,EAAO,8CCrEpB,IAAAC,EAAAC,EAAA,GAAAC,EAAAD,EAAAE,EAAAH,GAAAI,EAAAH,EAAA,GAAAI,EAAAJ,EAAAE,EAAAC,GAAAE,EAAAL,EAAA,KAAAM,EAAAN,EAAAE,EAAAG,GAKME,EAAS,SAAA7C,GAAa,IAAXC,EAAWD,EAAXC,MACf,OAAQsC,EAAAhC,EAAAC,cAAA,WAASM,UAAU,0BAA0BC,MAAO,CAAC+B,gBAAe,OAASC,IAAT,MAC1ER,EAAAhC,EAAAC,cAAA,OAAKM,UAAU,aACbyB,EAAAhC,EAAAC,cAAA,OAAKM,UAAU,aACbyB,EAAAhC,EAAAC,cAAA,OAAKM,UAAU,WACbyB,EAAAhC,EAAAC,cAAA,OAAKM,UAAU,4BACbyB,EAAAhC,EAAAC,cAAA,OAAKM,UAAU,GAAGC,MAAO,CAACiC,QAAS,WACjCT,EAAAhC,EAAAC,cAAA,MAAIM,UAAU,SACXb,UAUjB4C,EAAOpB,UAAY,CACjBxB,MAAOyB,IAAUC,QAGJkB,2BC3BfI,EAAAC,QAAiBZ,EAAAa,EAAuB","file":"component---src-templates-faq-page-js-2d52374ea2b291523d27.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport Header from '../components/Header'\n\nexport const FAQTemplate = ({\n  title,\n  meta_title,\n  meta_description,\n  text,\n  faqs,\n}) => (\n  <Layout>\n    <Helmet>\n      <title>{meta_title}</title>\n      <meta name='description' content={meta_description} />\n    </Helmet>\n    <Header title={title} />\n    <section className=\"faqs\" style={{marginTop:'30px'}}>\n      {faqs.map((f, index) => (\n        <article  key={index} className='message is-primary'>\n          <div className='message-header'>\n            <p>{f.question}</p>\n          </div>\n          <div className=\"message-body\">\n            <div className=\"accordion-content\"\n                 dangerouslySetInnerHTML={{__html: f.answer}}>\n            </div>\n          </div>\n        </article>\n      ))}\n    </section>\n\n  </Layout>\n)\n\nFAQTemplate.propTypes = {\n  title: PropTypes.string,\n  meta_title: PropTypes.string,\n  meta_description: PropTypes.string,\n  text: PropTypes.string,\n  faqs: PropTypes.array,\n}\n\nconst FAQ = ({data}) => {\n  const {frontmatter} = data.markdownRemark\n\n  return (\n    <FAQTemplate\n      title={frontmatter.title}\n      meta_title={frontmatter.meta_title}\n      meta_description={frontmatter.meta_description}\n      text={frontmatter.text}\n      faqs={frontmatter.faqs}\n    />\n  )\n}\n\nFAQ.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default FAQ\n\nexport const FAQPage = graphql`\n  query FAQ($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        meta_title\n        meta_description\n        faqs {\n          question\n          answer\n        }\n        text\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport jumbotron from '../../../static/img/jumbotron2.jpg'\n\nconst Header = ({title}) => {\n  return (<section className='hero is-primary is-bold' style={{backgroundImage: `url(${jumbotron})`}}>\n    <div className='hero-body'>\n      <div className='container'>\n        <div className='columns'>\n          <div className='column is-10 is-offset-1'>\n            <div className='' style={{padding: '0 24px'}}>\n              <h1 className='title'>\n                {title}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>)\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n}\n\nexport default Header\n","module.exports = __webpack_public_path__ + \"static/jumbotron2-5ad47aae12355d55c86bcb408d88ba08.jpg\";"],"sourceRoot":""}