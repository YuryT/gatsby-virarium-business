{"version":3,"sources":["webpack:///./src/components/Offerings/index.js","webpack:///./src/components/Testimonials/index.js","webpack:///./src/templates/home-page.js","webpack:///./src/components/Photo/Gallery.js"],"names":["Offerings","_ref","gridItems","react_default","a","createElement","className","map","item","key","image","style","borderRadius","alt","src","width","dangerouslySetInnerHTML","__html","text","propTypes","PropTypes","arrayOf","shape","string","Testimonials","testimonials","testimonial","id","quote","author","__webpack_require__","d","__webpack_exports__","home_page_HomePageTemplate","pageQuery","HomePageTemplate","title","heading","description","offerings","meta_title","meta_description","photos","layout","Helmet_default","name","content","poster","controls","type","textAlign","components_Offerings","blurbs","Gallery","components_Testimonials","array","HomePage","_ref2","data","frontmatter","markdownRemark","allImageSharp","edges","object","props","_this","_Component","call","this","maxWidth","height","state","shareOpen","anchorEl","lightbox","photo","Object","assign","srcSet","node","fluid","gotoPrevLightboxImage","setState","gotoNextLightboxImage","openLightbox","event","preventDefault","closeLightbox","render","_this2","react__WEBPACK_IMPORTED_MODULE_3___default","i","href","onClick","e","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","react_images__WEBPACK_IMPORTED_MODULE_6___default","backdropClosesModal","images","currentImage","isOpen","onClickPrev","onClickNext","onClose","Component"],"mappings":"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","file":"component---src-templates-home-page-js-7bb2a8a3005dec140dde.js","sourcesContent":["/**\n * Created by vaibhav on 1/4/18\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Offerings = ({ gridItems }) => (\n  <div className='columns is-multiline'>\n    {gridItems.map(item => (\n      <div key={item.image} className='column is-4' style={{borderRadius: '5px'}}>\n        <section className='section'>\n          <p className='has-text-centered'>\n            <img alt='' src={item.image} style={{width: '150px'}} />\n          </p>\n          <p dangerouslySetInnerHTML={{__html: item.text}} />\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nOfferings.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.string,\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default Offerings\n","/**\n * Created by vaibhav on 1/4/18\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Testimonials = ({testimonials}) => (\n  <div>\n    {testimonials.map((testimonial, id) => (\n      <article className='message' key={id}>\n        <div className='message-body'>\n          {testimonial.quote}\n          <br />\n          <cite> – {testimonial.author}</cite>\n        </div>\n      </article>\n    ))}\n  </div>\n)\n\nTestimonials.propTypes = {\n  testimonials: PropTypes.arrayOf(\n    PropTypes.shape({\n      quote: PropTypes.string,\n      author: PropTypes.string,\n    })\n  ),\n}\n\nexport default Testimonials\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport Offerings from '../components/Offerings'\nimport Gallery from '../components/Photo/Gallery'\nimport Testimonials from '../components/Testimonials'\nimport { StaticQuery, graphql } from 'gatsby'\n\nexport const HomePageTemplate = ({\n  title,\n  heading,\n  description,\n  image,\n  offerings,\n  meta_title,\n  meta_description,\n  photos,\n  testimonials,\n}) => (\n  <Layout>\n    <Helmet>\n      <title>{meta_title}</title>\n      <meta name='description' content={meta_description} />\n    </Helmet>\n    <section className='hero is-primary is-bold'>\n      <video id='mainPageVideo' poster={image} style={{width: '100%'}} controls>\n        <source src='/video/fast480.mp4' type='video/mp4' />\n      </video>\n    </section>\n    <section className='section section--gradient'>\n      <div className='container'>\n\n        <div className='section'>\n          <div className='columns'>\n            <div className='column is-10 is-offset-1'>\n              <div className='content'>\n                <div style={{textAlign: 'center'}}>\n                  <h1 className='title is-1'>{heading}</h1>\n                  <h2 className='subtitle'>{description}</h2>\n                </div>\n                <h3 className='title has-text-centered'>{offerings.description}</h3>\n                <Offerings gridItems={offerings.blurbs} />\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n    <section>\n      <div className='container'>\n        <div className='section'>\n          <h2 className='title has-text-weight-semibold is-size-2 has-text-centered'>Фотогалерея</h2>\n          <Gallery photos={photos} />\n        </div>\n      </div>\n    </section>\n    <section>\n      <div className='container'>\n        <div className='section'>\n          <h2 className='title has-text-weight-semibold is-size-2 has-text-centered'>Отзывы</h2>\n          <Testimonials testimonials={testimonials} />\n        </div>\n      </div>\n    </section>\n  </Layout>\n)\n\nHomePageTemplate.propTypes = {\n  title: PropTypes.string,\n  meta_title: PropTypes.string,\n  meta_description: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  offerings: PropTypes.shape({\n    description: PropTypes.string,\n    blurbs: PropTypes.array,\n  }),\n  testimonials: PropTypes.array,\n\n}\n\nconst HomePage = ({data}) => {\n  const {frontmatter} = data.markdownRemark\n  const photos = data.allImageSharp.edges\n\n  return (\n    <HomePageTemplate\n      title={frontmatter.title}\n      meta_title={frontmatter.meta_title}\n      meta_description={frontmatter.meta_description}\n      image={frontmatter.image}\n      heading={frontmatter.heading}\n      description={frontmatter.description}\n      offerings={frontmatter.offerings}\n      photos={photos}\n      testimonials={frontmatter.testimonials}\n    />\n  )\n}\n\nHomePage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default HomePage\n\nexport const pageQuery = graphql`\n  query IndexPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        meta_title\n        meta_description\n        image\n        heading\n        description\n        offerings {\n          description\n          blurbs {\n            image\n            text\n          }\n        }\n        testimonials {\n          author\n          quote\n        }\n      }\n    }\n    allImageSharp(filter: {fluid: {originalName: {regex: \"/general-photo/\"}}}) {\n      edges {\n        node {\n          fluid(maxWidth: 800) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n  }\n`\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\nimport Lightbox from 'react-images'\n\nclass Gallery extends Component {\n  constructor (props) {\n    super(props)\n    const maxWidth = props.maxWidth ? props.maxWidth : '200px'\n    const height = props.height ? props.height : '200px'\n    this.state = {\n      maxWidth,\n      height,\n      shareOpen: false,\n      anchorEl: null,\n      lightbox: false,\n      photos: props.photos.map(photo => Object.assign({ srcSet: photo.node.fluid.srcSet })),\n    }\n  }\n\n  gotoPrevLightboxImage() {\n    const { photo } = this.state;\n    this.setState({ photo: photo - 1 });\n  }\n\n  gotoNextLightboxImage () {\n    const { photo } = this.state;\n    this.setState({ photo: photo + 1 });\n  }\n\n  openLightbox (photo, event) {\n    event.preventDefault();\n    this.setState({ lightbox: true, photo });\n  }\n\n  closeLightbox () {\n    this.setState({ lightbox: false });\n  }\n\n  render() {\n    const { photos } = this.props;\n    return (\n      <section>\n        <div className='columns is-mobile is-variable is-0-mobile'>\n          {photos.map((photo, i) => (\n            <div className='column'  key={i} >\n              <a href={photo.node.fluid.src} onClick={e => this.openLightbox(i, e)}>\n                <Img style={{ maxWidth: this.state.maxWidth, height: this.state.height }} fluid={photo.node.fluid} />\n              </a>\n            </div>\n          ))}\n        </div>\n        <Lightbox\n          backdropClosesModal\n          images={this.state.photos}\n          currentImage={this.state.photo}\n          isOpen={this.state.lightbox}\n          onClickPrev={() => this.gotoPrevLightboxImage()}\n          onClickNext={() => this.gotoNextLightboxImage()}\n          onClose={() => this.closeLightbox()}\n        />\n      </section>\n    );\n  }\n}\n\nGallery.propTypes = {\n  maxWidth: PropTypes.string,\n  height: PropTypes.string,\n}\n\nexport default Gallery\n"],"sourceRoot":""}