{"version":3,"sources":["webpack:///./src/templates/onequest-page.js","webpack:///./src/components/Header/index.js","webpack:///./static/img/jumbotron2.jpg","webpack:///./src/components/Content/index.js","webpack:///./src/components/SEO/index.js"],"names":["__webpack_require__","r","__webpack_exports__","d","QuestTemplate","pageQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_Content__WEBPACK_IMPORTED_MODULE_4__","_components_SEO__WEBPACK_IMPORTED_MODULE_5__","_components_Header__WEBPACK_IMPORTED_MODULE_6__","_ref","content","contentComponent","cover","meta_title","meta_desc","title","slug","PostContent","Content","a","createElement","className","src","alt","propTypes","PropTypes","string","isRequired","func","QuestPage","_ref2","post","data","markdownRemark","html","HTMLContent","frontmatter","meta_description","fields","shape","object","_static_img_jumbotron2_jpg__WEBPACK_IMPORTED_MODULE_2__","_static_img_jumbotron2_jpg__WEBPACK_IMPORTED_MODULE_2___default","Header","style","backgroundImage","jumbotron","padding","module","exports","p","dangerouslySetInnerHTML","__html","_meta_config__WEBPACK_IMPORTED_MODULE_1__","_meta_config__WEBPACK_IMPORTED_MODULE_1___default","react_helmet__WEBPACK_IMPORTED_MODULE_2__","react_helmet__WEBPACK_IMPORTED_MODULE_2___default","SE0","postURL","config","siteUrl","realPrefix","pathPrefix","image","blogURL","schemaOrgJSONLD","@context","@type","url","name","alternateName","siteTitleAlt","push","itemListElement","position","item","@id","headline","type","JSON","stringify","property","siteFBAppID","userTwitter"],"mappings":"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","file":"component---src-templates-onequest-page-js-3df6079602d5db0fa844.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport {kebabCase} from 'lodash'\nimport Layout from '../components/layout'\nimport Content, {HTMLContent} from '../components/Content'\nimport SE0 from '../components/SEO'\nimport Header from '../components/Header'\n\nexport const QuestTemplate = ({\n  content,\n  contentComponent,\n  cover,\n  meta_title,\n  meta_desc,\n  title,\n  slug,\n}) => {\n  const PostContent = contentComponent || Content\n\n  return (\n    <Layout>\n      <SE0\n        title={title}\n        meta_title={meta_title}\n        meta_desc={meta_desc}\n        cover={cover}\n        slug={slug}\n      />\n      <Header title={title}/>\n      <section className='section'>\n        <div className='container content'>\n          <div className='columns'>\n            <div className='column is-10 is-offset-1'>\n              <img src={cover} alt={title} />\n              <div className='section'>\n                <PostContent content={content} />\n              </div>\n              <hr />\n            </div>\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nQuestTemplate.propTypes = {\n  content: PropTypes.string.isRequired,\n  contentComponent: PropTypes.func,\n  cover: PropTypes.string,\n  meta_title: PropTypes.string,\n  meta_desc: PropTypes.string,\n  title: PropTypes.string,\n  slug: PropTypes.string,\n}\n\nconst QuestPage = ({data}) => {\n  const {markdownRemark: post} = data\n  return (\n    <QuestTemplate\n      content={post.html}\n      contentComponent={HTMLContent}\n      cover={post.frontmatter.cover}\n      meta_title={post.frontmatter.meta_title}\n      meta_desc={post.frontmatter.meta_description}\n      title={post.frontmatter.title}\n      slug={post.fields.slug}\n    />\n  )\n}\n\nQuestPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default QuestPage\n\nexport const pageQuery = graphql`\n  query QuestByID($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      id\n      html\n      fields {\n            slug\n          }\n      frontmatter {\n        date(formatString: \"MMMM DD, YYYY\")\n        title\n        cover\n        meta_title\n        meta_description\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport jumbotron from '../../../static/img/jumbotron2.jpg'\n\nconst Header = ({title}) => {\n  return (<section className='hero is-primary is-bold' style={{backgroundImage: `url(${jumbotron})`}}>\n    <div className='hero-body'>\n      <div className='container'>\n        <div className='columns'>\n          <div className='column is-10 is-offset-1'>\n            <div className='' style={{padding: '0 24px'}}>\n              <h1 className='title'>\n                {title}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>)\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n}\n\nexport default Header\n","module.exports = __webpack_public_path__ + \"static/jumbotron2-5ad47aae12355d55c86bcb408d88ba08.jpg\";","/**\n * Created by vaibhav on 31/3/18\n */\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\nexport const HTMLContent = ({ content, className }) => (\n  <div className={className} dangerouslySetInnerHTML={{ __html: content }} />\n)\n\nconst Content = ({ content, className }) => (\n  <div className={className}>{content}</div>\n)\n\nContent.propTypes = {\n  content: PropTypes.string,\n  className: PropTypes.string,\n}\n\nHTMLContent.propTypes = Content.propTypes\n\nexport default Content\n","/**\n * Created by vaibhav on 31/3/18\n */\nimport React from 'react'\nimport config from '../../../meta/config'\nimport Helmet from 'react-helmet'\n\nconst SE0 = ({title, meta_title, meta_desc, cover, slug}) => {\n  let postURL = config.siteUrl + slug\n  const realPrefix = config.pathPrefix === '/' ? '' : config.pathPrefix\n  let image = config.siteUrl + realPrefix + cover\n  const blogURL = config.siteUrl + config.pathPrefix\n  const schemaOrgJSONLD = [\n    {\n      '@context': 'http://schema.org',\n      '@type': 'WebSite',\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n    },\n  ]\n\n  schemaOrgJSONLD.push([\n    {\n      '@context': 'http://schema.org',\n      '@type': 'BreadcrumbList',\n      itemListElement: [\n        {\n          '@type': 'ListItem',\n          position: 1,\n          item: {\n            '@id': postURL,\n            name: title,\n            image,\n          },\n        },\n      ],\n    },\n    {\n      '@context': 'http://schema.org',\n      '@type': 'BlogPosting',\n      url: blogURL,\n      name: title,\n      alternateName: config.siteTitleAlt ? config.siteTitleAlt : '',\n      headline: title,\n      image: {\n        '@type': 'ImageObject',\n        url: image,\n      },\n      meta_desc,\n    },\n  ])\n\n  return (\n    <Helmet>\n      <title>{meta_title}</title>\n      {/* General tags */}\n      <meta name='description' content={meta_desc} />\n      <meta name='image' content={cover} />\n      {/* Schema.org tags */}\n      <script type='application/ld+json'>\n        {JSON.stringify(schemaOrgJSONLD)}\n      </script>\n      {/* OpenGraph tags */}\n      <meta property='og:url' content={postURL} />\n      <meta property='og:type' content='article' />\n      <meta property='og:title' content={title} />\n      <meta property='og:description' content={meta_desc} />\n      <meta property='og:image' content={image} />\n      <meta\n        property='fb:app_id'\n        content={config.siteFBAppID ? config.siteFBAppID : ''}\n      />\n      {/* Twitter Card tags */}\n      <meta name='twitter:card' content='summary_large_image' />\n      <meta\n        name='twitter:creator'\n        content={config.userTwitter ? config.userTwitter : ''}\n      />\n      <meta name='twitter:title' content={title} />\n      <meta name='twitter:description' content={meta_desc} />\n      <meta name='twitter:image' content={image} />\n    </Helmet>\n  )\n}\n\nexport default SE0\n"],"sourceRoot":""}