{"version":3,"sources":["webpack:///./src/components/Pricing/index.js","webpack:///./src/templates/pricing-page.js"],"names":["Pricing","data","className","style","textAlign","dangerouslySetInnerHTML","__html","heading","description","plans","map","price","key","plan","border","height","PricingPageTemplate","title","meta_title","meta_description","loyal_program","pricing_solo","pricing_group","pricing_cert","name","content","Header","fontSize","pricingPageQuery","PricingPage","frontmatter","markdownRemark"],"mappings":"0JAoDeA,EA/CC,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAH,OACd,yBAAKC,UAAU,WACb,wBAAIA,UAAU,qCACZC,MAAO,CAACC,UAAW,UACnBC,wBAAyB,CAAEC,OAAQL,EAAKM,WAE1C,yBAAKL,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,WACb,uBAAGA,UAAU,aAAaD,EAAKO,aAE/B,yBAAKN,UAAU,WACZD,EAAKQ,MAAMC,KAAI,SAAAC,GAAK,OACnB,yBAAKC,IAAKD,EAAME,KAAMX,UAAU,UAC9B,6BAASA,UAAU,UAAUC,MAAO,CAACW,OAAQ,oBAAqBC,OAAQ,SACxE,wBAAIb,UAAU,oDACXS,EAAME,MAET,wBAAIX,UAAU,qCAAd,SACSS,EAAMA,OAEf,yBAAKT,UAAU,4BACb,yBAAKG,wBAAyB,CAAEC,OAAQK,EAAMH,2BC3BlE,qGAOO,IAAMQ,EAAsB,SAAC,GAAD,IACjCC,EADiC,EACjCA,MACAC,EAFiC,EAEjCA,WACAC,EAHiC,EAGjCA,iBACAC,EAJiC,EAIjCA,cACAC,EALiC,EAKjCA,aACAC,EANiC,EAMjCA,cACAC,EAPiC,EAOjCA,aAPiC,OASjC,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,+BAAQL,GACR,0BAAMM,KAAK,cAAcC,QAASN,KAEpC,kBAACO,EAAA,EAAD,CAAQT,MAAOA,IACf,kBAAC,EAAD,CAAShB,KAAMoB,IACf,yBAAKnB,UAAU,mBACb,kBAAC,EAAD,CAASD,KAAMqB,KAEjB,yBAAKpB,UAAU,QACb,yBAAKA,UAAU,WACb,wBAAIA,UAAU,qCAAqCC,MAAO,CAACC,UAAW,WAAtE,wBAGA,yBAAKF,UAAU,WACb,yBAAKA,UAAU,4BACb,yBAAKA,UAAU,UAAUC,MAAO,CAAEwB,SAAU,SAAWtB,wBAAyB,CAAEC,OAAQc,SAKlG,yBAAKlB,UAAU,mBACb,kBAAC,EAAD,CAASD,KAAMsB,OAsDRK,GAFEC,UAxBK,SAAC,GAAY,IACxBC,EADuB,EAAV7B,KACO8B,eAApBD,YAEP,OACE,kBAAC,EAAD,CACEb,MAAOa,EAAYb,MACnBC,WAAYY,EAAYZ,WACxBC,iBAAkBW,EAAYX,iBAC9BC,cAAeU,EAAYV,cAC3BC,aAAcS,EAAYT,aAC1BC,cAAeQ,EAAYR,cAC3BC,aAAcO,EAAYP,gBAeH","file":"component---src-templates-pricing-page-js-a7fff44ac2cb4a1531c8.js","sourcesContent":["\nimport React from 'react'\nimport PropTypes from 'prop-types'\n\n// TODO fix workaround for href in description\nconst Pricing = ({ data }) => (\n  <div className='section'>\n    <h2 className='has-text-weight-semibold is-size-2'\n      style={{textAlign: 'center'}}\n      dangerouslySetInnerHTML={{ __html: data.heading }}\n    />\n    <div className='columns'>\n      <div className='column is-10 is-offset-1'>\n        <div className='content'>\n          <p className='is-size-5'>{data.description}</p>\n\n          <div className='columns'>\n            {data.plans.map(price => (\n              <div key={price.plan} className='column'>\n                <section className='section' style={{border: '1px solid #eaecee', height: '100%'}}>\n                  <h4 className='title has-text-centered has-text-weight-semibold'>\n                    {price.plan}\n                  </h4>\n                  <h5 className='title has-text-centered is-size-5'>\n                    Цена: {price.price}\n                  </h5>\n                  <div className='has-text-weight-semibold'>\n                    <div dangerouslySetInnerHTML={{ __html: price.description }} />\n                  </div>\n                </section>\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n)\n\nPricing.propTypes = {\n  data: PropTypes.shape({\n    description: PropTypes.string,\n    heading: PropTypes.string,\n    plans: PropTypes.arrayOf(\n      PropTypes.shape({\n        plan: PropTypes.string,\n        price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n        description: PropTypes.string,\n      })),\n  }),\n}\n\nexport default Pricing\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport Layout from '../components/layout'\nimport Header from '../components/Header'\nimport Pricing from '../components/Pricing'\n\nexport const PricingPageTemplate = ({\n  title,\n  meta_title,\n  meta_description,\n  loyal_program,\n  pricing_solo,\n  pricing_group,\n  pricing_cert,\n}) => (\n  <Layout>\n    <Helmet>\n      <title>{meta_title}</title>\n      <meta name='description' content={meta_description} />\n    </Helmet>\n    <Header title={title} />\n    <Pricing data={pricing_solo} />\n    <div className='hero is-primary'>\n      <Pricing data={pricing_group} />\n    </div>\n    <div className='hero'>\n      <div className='section'>\n        <h2 className='has-text-weight-semibold is-size-2' style={{textAlign: 'center'}}>\n          Программа лояльности\n        </h2>\n        <div className='columns'>\n          <div className='column is-10 is-offset-1'>\n            <div className='content' style={{ fontSize: '1.4em' }} dangerouslySetInnerHTML={{ __html: loyal_program }} />\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className='hero is-primary'>\n      <Pricing data={pricing_cert} />\n    </div>\n  </Layout>\n)\n\nPricingPageTemplate.propTypes = {\n  title: PropTypes.string,\n  meta_title: PropTypes.string,\n  meta_description: PropTypes.string,\n  loyal_program: PropTypes.string,\n  pricing_solo: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    plans: PropTypes.array,\n  }),\n  pricing_group: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    plans: PropTypes.array,\n  }),\n  pricing_cert: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    plans: PropTypes.array,\n  }),\n\n}\n\nconst PricingPage = ({data}) => {\n  const {frontmatter} = data.markdownRemark\n\n  return (\n    <PricingPageTemplate\n      title={frontmatter.title}\n      meta_title={frontmatter.meta_title}\n      meta_description={frontmatter.meta_description}\n      loyal_program={frontmatter.loyal_program}\n      pricing_solo={frontmatter.pricing_solo}\n      pricing_group={frontmatter.pricing_group}\n      pricing_cert={frontmatter.pricing_cert}\n    />\n  )\n}\n\nPricingPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default PricingPage\n\nexport const pricingPageQuery = graphql`\n  query PricingPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        meta_title\n        meta_description\n        loyal_program\n        pricing_solo {\n          heading\n          description\n          plans {\n            description\n            plan\n            price\n          }\n        }\n        pricing_group {\n          heading\n          description\n          plans {\n            description\n            plan\n            price\n          }\n        }\n        pricing_cert {\n          heading\n          description\n          plans {\n            description\n            plan\n            price\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}