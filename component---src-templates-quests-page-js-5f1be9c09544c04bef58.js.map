{"version":3,"sources":["webpack:///./src/templates/quests-page.js","webpack:///./src/components/Header/index.js","webpack:///./static/img/jumbotron2.jpg","webpack:///./src/components/Photo/Gallery.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["QuestsPageTemplate","_ref","title","meta_title","meta_description","description","photos","quests","questArticles","forEach","q","node","frontmatter","photoFolder","react__WEBPACK_IMPORTED_MODULE_4___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_8__","react_helmet__WEBPACK_IMPORTED_MODULE_6___default","name","content","_components_Header__WEBPACK_IMPORTED_MODULE_9__","className","dangerouslySetInnerHTML","__html","map","index","key","_components_Photo_Gallery__WEBPACK_IMPORTED_MODULE_10__","excerpt","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","fields","slug","propTypes","PropTypes","string","details","array","QuestsPage","_ref2","data","markdownRemark","minorityImages","edges","valkyrieImages","allMarkdownRemark","shape","object","__webpack_exports__","questsPageQuery","react__WEBPACK_IMPORTED_MODULE_0__","__webpack_require__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","_static_img_jumbotron2_jpg__WEBPACK_IMPORTED_MODULE_2__","_static_img_jumbotron2_jpg__WEBPACK_IMPORTED_MODULE_2___default","Header","style","backgroundImage","jumbotron","padding","module","exports","p","Gallery","props","_this","_Component","call","this","maxWidth","height","state","shareOpen","anchorEl","lightbox","photo","Object","assign","srcSet","fluid","gotoPrevLightboxImage","setState","gotoNextLightboxImage","openLightbox","event","preventDefault","closeLightbox","render","_this2","react__WEBPACK_IMPORTED_MODULE_3___default","i","href","src","onClick","e","gatsby_image__WEBPACK_IMPORTED_MODULE_5___default","react_images__WEBPACK_IMPORTED_MODULE_6___default","backdropClosesModal","images","currentImage","isOpen","onClickPrev","onClickNext","onClose","Component","dP","f","FProto","Function","prototype","nameRE","configurable","get","match"],"mappings":"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","file":"component---src-templates-quests-page-js-5f1be9c09544c04bef58.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport Header from '../components/Header'\nimport Gallery from '../components/Photo/Gallery'\n\nexport const QuestsPageTemplate = ({\n  title,\n  meta_title,\n  meta_description,\n  description,\n  // details,\n  quests,\n  photos,\n  questArticles,\n}) => {\n  questArticles.forEach((q) => {\n    q.photos = photos[q.node.frontmatter.photoFolder]\n  })\n  return (\n    <Layout>\n      <Helmet>\n        <title>{meta_title}</title>\n        <meta name='description' content={meta_description} />\n      </Helmet>\n      <Header title={title} />\n      <section className='section'>\n        <div className='container'>\n          <div className='section'>\n            <div className='has-text-centered' dangerouslySetInnerHTML={{ __html: description }} />\n            <div>\n              {/* {details.map((d) => (\n                <div>\n                  <div>{d.question} - {d.answer}</div>\n                </div>\n              ))} */}\n            </div>\n            {questArticles.map((q, index) => (\n              <div  key={index} className='section'>\n                <h3 className='subtitle has-text-centered'>{q.node.frontmatter.name}</h3>\n                <div className='columns is-centered'>\n                  <div className='column is-8-desktop'>\n                    <Gallery photos={q.photos} />\n                  </div>\n                </div>\n                <div>\n                  {q.node.excerpt}\n                </div>\n                <div className='has-text-centered'>\n                  <Link to={q.node.fields.slug} className='button is-primary is-outlined'>\n                    Подробнее\n                  </Link>\n                </div>\n              </div>\n            ))}\n          </div>\n        </div>\n      </section>\n    </Layout>\n  )\n}\n\nQuestsPageTemplate.propTypes = {\n  title: PropTypes.string,\n  meta_title: PropTypes.string,\n  meta_description: PropTypes.string,\n  description: PropTypes.string,\n  details: PropTypes.array,\n  quests: PropTypes.array,\n\n}\n\nconst QuestsPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n  const photos = {\n    minorityImages: data.minorityImages.edges,\n    valkyrieImages: data.valkyrieImages.edges,\n  }\n  const questArticles = data.allMarkdownRemark.edges\n  return (\n    <QuestsPageTemplate\n      title={frontmatter.title}\n      meta_title={frontmatter.meta_title}\n      meta_description={frontmatter.meta_description}\n      description={frontmatter.description}\n      // details={frontmatter.details}\n      quests={frontmatter.quests}\n      photos={photos}\n      questArticles={questArticles}\n    />\n  )\n}\n\nQuestsPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default QuestsPage\n\n//TODO check if any reason to use fields instead of formatter\n// details {\n//   question\n//   answer\n// },\nexport const questsPageQuery = graphql`\n  query QuestsPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        meta_title\n        meta_description\n        description\n      }\n    }\n    minorityImages: allImageSharp(filter: {fluid: {originalName: {regex: \"/quest-minority-photo/\"}}}){\n      edges {\n        node {\n          fluid(maxWidth: 650) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    valkyrieImages: allImageSharp(filter: {fluid: {originalName: {regex: \"/valkyrie-minority-photo/\"}}}){\n      edges {\n        node {\n          fluid(maxWidth: 650) {\n            ...GatsbyImageSharpFluid\n          }\n        }\n      }\n    }\n    allMarkdownRemark(\n      sort: { order: DESC, fields: [frontmatter___order] },\n      filter: { frontmatter: { templateKey: { eq: \"onequest-page\" } }}\n    ) {\n      edges {\n        node {\n          excerpt(pruneLength: 600)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            name,\n            photoFolder\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport jumbotron from '../../../static/img/jumbotron2.jpg'\n\nconst Header = ({title}) => {\n  return (<section className='hero is-primary is-bold' style={{backgroundImage: `url(${jumbotron})`}}>\n    <div className='hero-body'>\n      <div className='container'>\n        <div className='columns'>\n          <div className='column is-10 is-offset-1'>\n            <div className='' style={{padding: '0 24px'}}>\n              <h1 className='title'>\n                {title}\n              </h1>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </section>)\n}\n\nHeader.propTypes = {\n  title: PropTypes.string,\n}\n\nexport default Header\n","module.exports = __webpack_public_path__ + \"static/jumbotron2-5ad47aae12355d55c86bcb408d88ba08.jpg\";","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Img from 'gatsby-image'\nimport Lightbox from 'react-images'\n\nclass Gallery extends Component {\n  constructor (props) {\n    super(props)\n    const maxWidth = props.maxWidth ? props.maxWidth : '200px'\n    const height = props.height ? props.height : '200px'\n    this.state = {\n      maxWidth,\n      height,\n      shareOpen: false,\n      anchorEl: null,\n      lightbox: false,\n      photos: props.photos.map(photo => Object.assign({ srcSet: photo.node.fluid.srcSet })),\n    }\n  }\n\n  gotoPrevLightboxImage() {\n    const { photo } = this.state;\n    this.setState({ photo: photo - 1 });\n  }\n\n  gotoNextLightboxImage () {\n    const { photo } = this.state;\n    this.setState({ photo: photo + 1 });\n  }\n\n  openLightbox (photo, event) {\n    event.preventDefault();\n    this.setState({ lightbox: true, photo });\n  }\n\n  closeLightbox () {\n    this.setState({ lightbox: false });\n  }\n\n  render() {\n    const { photos } = this.props;\n    return (\n      <section>\n        <div className='columns is-mobile is-variable is-0-mobile'>\n          {photos.map((photo, i) => (\n            <div className='column'  key={i} >\n              <a href={photo.node.fluid.src} onClick={e => this.openLightbox(i, e)}>\n                <Img style={{ maxWidth: this.state.maxWidth, height: this.state.height }} fluid={photo.node.fluid} />\n              </a>\n            </div>\n          ))}\n        </div>\n        <Lightbox\n          backdropClosesModal\n          images={this.state.photos}\n          currentImage={this.state.photo}\n          isOpen={this.state.lightbox}\n          onClickPrev={() => this.gotoPrevLightboxImage()}\n          onClickNext={() => this.gotoNextLightboxImage()}\n          onClose={() => this.closeLightbox()}\n        />\n      </section>\n    );\n  }\n}\n\nGallery.propTypes = {\n  maxWidth: PropTypes.string,\n  height: PropTypes.string,\n}\n\nexport default Gallery\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}