{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./src/components/PostCard/index.js"],"names":["TagRoute","render","posts","this","props","data","allMarkdownRemark","edges","tag","pageContext","title","site","siteMetadata","totalCount","tagHeader","className","style","marginBottom","to","Component","tagPageQuery","PostCard","filter","post","node","frontmatter","templateKey","map","border","padding","key","id","fields","slug","date","excerpt"],"mappings":"4NAOMA,E,gLACJC,OAAA,WACE,IAAMC,EAAQC,KAAKC,MAAMC,KAAKC,kBAAkBC,MAC1CC,EAAML,KAAKC,MAAMK,YAAYD,IAC7BE,EAAQP,KAAKC,MAAMC,KAAKM,KAAKC,aAAaF,MAC1CG,EAAaV,KAAKC,MAAMC,KAAKC,kBAAkBO,WAC/CC,EAAeD,EAAN,MACE,IAAfA,EAAmB,UAAY,WADlB,cAEDL,EAFC,IAIf,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQE,MAAM,YACd,6BAASK,UAAU,WACjB,kBAAC,IAAD,CAAQL,MAAUF,EAAL,MAAcE,IAC3B,yBAAKK,UAAU,qBACb,yBAAKA,UAAU,WACb,yBACEA,UAAU,2BACVC,MAAO,CAAEC,aAAc,SAEvB,wBAAIF,UAAU,iCAAiCD,GAC/C,kBAAC,IAAD,CAAUZ,MAAOA,IACjB,6BACA,2BACE,kBAAC,OAAD,CAAMgB,GAAG,UAAT,4B,GAzBKC,aAoCRnB,YAER,IAAMoB,EAAY,c,iCC7CzB,qCAsCeC,IAhCE,SAAC,GAAa,IAAZnB,EAAW,EAAXA,MACjB,OACE,yBAAKa,UAAU,aACZb,EACEoB,QAAO,SAAAC,GAAI,MAA0C,iBAAtCA,EAAKC,KAAKC,YAAYC,eACrCC,KAAI,gBAAQJ,EAAR,EAAEC,KAAF,OACH,yBACET,UAAU,UACVC,MAAO,CAACY,OAAQ,oBAAqBC,QAAS,WAC9CC,IAAKP,EAAKQ,IAEV,2BACE,kBAAC,IAAD,CAAMhB,UAAU,mBAAmBG,GAAIK,EAAKS,OAAOC,MAChDV,EAAKE,YAAYf,OAEpB,qCACA,+BAAQa,EAAKE,YAAYS,OAE3B,2BACGX,EAAKY,QACN,6BACA,6BACA,kBAAC,IAAD,CAAMpB,UAAU,kBAAkBG,GAAIK,EAAKS,OAAOC,MAAlD","file":"component---src-templates-tags-js-c3ac711d6d73a296ecca.js","sourcesContent":["import React, {Component} from 'react'\nimport Helmet from 'react-helmet'\nimport { Link } from 'gatsby'\nimport Layout from '../components/layout'\nimport Header from '../components/Header'\nimport PostCard from '../components/PostCard'\n\nclass TagRoute extends Component {\n  render () {\n    const posts = this.props.data.allMarkdownRemark.edges\n    const tag = this.props.pageContext.tag\n    const title = this.props.data.site.siteMetadata.title\n    const totalCount = this.props.data.allMarkdownRemark.totalCount\n    const tagHeader = `${totalCount}  ${\n      totalCount === 1 ? 'новость' : 'новости'\n    } с  тегом “${tag}”`\n\n    return (\n      <Layout>\n        <Header title='Новости' />\n        <section className='section'>\n          <Helmet title={`${tag} | ${title}`} />\n          <div className='container content'>\n            <div className='columns'>\n              <div\n                className='column is-10 is-offset-1'\n                style={{ marginBottom: '6rem' }}\n              >\n                <h3 className='title is-size-4 is-bold-light'>{tagHeader}</h3>\n                <PostCard posts={posts} />\n                <br />\n                <p>\n                  <Link to='/tags/'>Показать все теги</Link>\n                </p>\n              </div>\n            </div>\n          </div>\n        </section>\n      </Layout>\n    )\n  }\n}\n\nexport default TagRoute\n\nexport const tagPageQuery = graphql`\n  query TagPage($tag: String) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(\n      limit: 1000\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      totalCount\n      edges {\n        node {\n          excerpt(pruneLength: 400)\n          id\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            cover\n            templateKey\n            date(formatString: \"MMMM DD, YYYY\")\n          }\n        }\n      }\n    }\n  }\n`\n","/**\n * Created by vaibhav on 2/4/18\n */\nimport React from 'react'\nimport Link from 'gatsby-link'\n\nconst PostCard = ({posts}) => {\n  return (\n    <div className='container'>\n      {posts\n        .filter(post => post.node.frontmatter.templateKey === 'article-page')\n        .map(({node: post}) => (\n          <div\n            className='content'\n            style={{border: '1px solid #eaecee', padding: '2em 4em'}}\n            key={post.id}\n          >\n            <p>\n              <Link className='has-text-primary' to={post.fields.slug}>\n                {post.frontmatter.title}\n              </Link>\n              <span> &bull; </span>\n              <small>{post.frontmatter.date}</small>\n            </p>\n            <p>\n              {post.excerpt}\n              <br />\n              <br />\n              <Link className='button is-small' to={post.fields.slug}>\n                                Подробнее →\n              </Link>\n            </p>\n          </div>\n        ))}\n    </div>\n  )\n}\n\nexport default PostCard\n"],"sourceRoot":""}